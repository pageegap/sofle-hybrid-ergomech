/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define BASE 0
#define LOWER 1
#define RAISE 2
#define ADJUST 3

/ {
    // Activate ADJUST layer by pressing raise and lower

    conditional_layers { compatible = "zmk,conditional-layers"; };

    behaviors {
        ht2: ht2 {
            compatible = "zmk,behavior-hold-tap";
            label = "HT2";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <150>;
            flavor = "balanced";
        };

        launch: launch {
            compatible = "zmk,behavior-tap-dance";
            label = "LAUNCH";
            #binding-cells = <0>;
            bindings = <&kp LC(UP_ARROW)>, <&kp RG(UP_ARROW)>;

            tapping-term-ms = <400>;
        };

        spacecmd: spacecmd {
            compatible = "zmk,behavior-tap-dance";
            label = "SPACECMD";
            #binding-cells = <0>;
            bindings = <&kp SPACE>, <&kp RG(UP_ARROW)>;

            tapping-term-ms = <400>;
        };
    };

    macros {
        new_macro: new_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RC(E) &kp ENTER>;
            label = "NEW_MACRO";
        };
    };

    combos {
        compatible = "zmk,combos";

        locks {
            bindings = <&kp LC(LG(K_EJECT))>;
            key-positions = <0 11>;
        };

        prtscr {
            bindings = <&kp LG(LS(N5))>;
            key-positions = <41 42>;
        };

        entboth {
            bindings = <&kp ENTER>;
            key-positions = <43 44>;
        };

        topesc {
            bindings = <&kp ESC>;
            key-positions = <19 20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "default";

            // ------------------------------------------------------------------------------------------------------------
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |       |
            // |  ESC  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   | BKSPC |
            // |  TAB  |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  |       |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //               | GUI | ALT  | CTRL | LOWER|  ENTER |  | SPACE | RAISE| CTRL  | ALT   | GUI  |

            bindings = <
&kp ESC        &kp N1           &kp N2           &kp N3               &kp N4             &kp N5   &kp N6                &kp N7              &kp N8                &kp N9           &kp N0               &kp DEL
&kp CAPS       &kp Q            &kp W            &kp E                &kp R              &kp T    &kp Y                 &kp U               &kp I                 &kp O            &kp P                &kp ENTER
&kp BACKSPACE  &ht2 LEFT_GUI A  &ht2 LEFT_ALT S  &ht2 LEFT_CONTROL D  &ht2 LEFT_SHIFT F  &kp G    &kp H                 &ht2 RIGHT_SHIFT J  &ht2 RIGHT_CONTROL K  &ht2 LEFT_ALT L  &ht2 RIGHT_GUI SEMI  &kp SQT
&kp LSHFT      &lt 2 Z          &kp X            &kp C                &kp V              &lt 3 B  &lt 3 N               &kp M               &kp COMMA             &kp DOT          &lt 1 SLASH          &kp RSHFT
&launch        &kp LGUI         &kp LEFT_ALT     &kp LCTRL            &mo 1              &kp RET  &ht2 RIGHT_GUI SPACE  &kp SPACE           &kp RIGHT_CONTROL     &kp RIGHT_ALT    &kp RIGHT_GUI
                                                                                                  &kp LG(LS(N5))        &kp RIGHT           &kp UP_ARROW          &kp LEFT         &kp DOWN
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        lower_layer {
            label = "lower";

            // TODO: Some binds are waiting for shifted keycode support.
            // ------------------------------------------------------------------------------------------------------------
            // |       |  F1 |  F2 |  F3  |  F4  |  F5  |                   |  F6  |  F7   |  F8   |  F9  |  F10  |  F11  |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |  F12  |
            // |       |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   |   |
            // |       |  =  |  -  |  +   |  {   |  }   |        |  |       |  [   |  ]    |  ;    |  :   |   \   |       |
            //               |     |      |      |      |        |  |       |      |       |       |      |

            bindings = <
&trans                &kp F1  &kp F2       &kp F3                &kp F4                 &kp F5         &kp F6            &kp F7     &kp F8        &kp F9         &kp F10  &kp F11
&trans                &trans  &kp PERCENT  &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp POUND      &kp POUND         &kp AMPS   &kp ASTERISK  &kp GRAVE      &trans   &kp F12
&trans                &trans  &trans       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp LC(TILDE)  &kp EXCLAMATION   &kp EQUAL  &kp PLUS      &kp MINUS      &trans   &trans
&trans                &trans  &trans       &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp DOLLAR     &kp LC(BSLH)      &kp PIPE   &trans        &kp RIGHT_GUI  &trans   &trans
&kp LG(LS(NUMBER_5))  &trans  &trans       &trans                &trans                 &trans         &kp TAB           &trans     &trans        &trans         &trans
                                                                                                       &kp RG(UP_ARROW)  &trans     &trans        &trans         &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        raise_layer {
            label = "raise";

            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1  | BT2  |  BT3  |  BT4  |  BT5 |                |      |      |       |      |       |       |
            // |       | INS  | PSCR | GUI   |       |      |                | PGUP |      |   ^   |      |       |       |
            // |       | ALT  | CTRL | SHIFT |       | CAPS |                | PGDN |   <- |   v   |  ->  |  DEL  | BKSPC |
            // |       | UNDO | CUT  | COPY  | PASTE |      |      |  |      |      |      |       |      |       |       |
            //                |      |       |       |      |      |  |      |      |      |       |      |

            bindings = <
&bt BT_CLR      &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2     &bt BT_SEL 3  &bt BT_SEL 4  &trans            &trans        &trans        &trans        &trans  &trans
&bt BT_CLR_ALL  &trans        &trans        &trans           &trans        &trans        &trans            &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans
&trans          &trans        &trans        &kp LS(LC(TAB))  &kp LC(TAB)   &trans        &trans            &kp NUMBER_4  &kp N5        &kp NUMBER_6  &trans  &trans
&trans          &trans        &kp LEFT_GUI  &trans           &trans        &kp TAB       &trans            &kp N7        &kp N8        &kp N9        &kp N0  &trans
&trans          &trans        &trans        &trans           &trans        &kp TAB       &kp END           &trans        &trans        &trans        &trans
                                                                                         &kp LG(UP_ARROW)  &trans        &trans        &trans        &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        fn_arrows {
            bindings = <
&trans  &trans   &trans  &trans  &trans   &trans  &trans  &kp K_MUTE      &kp C_VOLUME_UP  &kp C_VOLUME_DOWN  &trans     &trans
&trans  &trans   &trans  &trans  &trans   &trans  &trans  &trans          &trans           &trans             &trans     &trans
&trans  &kp F12  &kp F7  &kp F8  &kp F10  &trans  &trans  &kp LEFT_ARROW  &kp UP_ARROW     &kp DOWN_ARROW     &kp RIGHT  &trans
&trans  &trans   &trans  &trans  &trans   &trans  &trans  &new_macro      &kp HOME         &kp END            &trans     &trans
&trans  &trans   &trans  &trans  &trans   &trans  &trans  &trans          &trans           &trans             &trans
                                                  &trans  &trans          &trans           &trans             &trans
            >;
        };
    };
};
